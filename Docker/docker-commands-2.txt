#Docker Installation | Configuration | Commands & Concepts:

sudo yum install docker


yum install docker -y
docker version
systemctl status docker
systemctl start docker
systemctl status docker
systemctl enable docker


#Basic Docker Commands :

#goto : https://hub.docker.com/

#Test Docker with basic hello-world image from docker hub.

docker run centos
docker run nginx

docker pull docker/whalesay
docker pull hello-world

docker images

docker run centos

docker ps
docker ps -a

docker run -it centos bash
dockerpath# cat /etc/*release*
dockerpath# exit

docker run -d centos sleep 20 
docker ps -a

docker run -d centos sleep 200
docker stop <container_id>

docker rm 2c5b 1b4f

docker images
docker rmi <image_id>

### Before deleting image, ensure that it is not referenced to any container. 
### In it is mapped, delete the container first, then can re container image.

docker rmi -f hello-world

docker pull centos:centos7.9.2009

docker run centos sleep 1100

docker stop <container_id>

### Detached Mode
docker run -d centos sleep 2000

docker attach <running_container_id>
docker stop <container_id>

###docker pull timer

#docker pull jenkins

#docker run jenkins

docker inspect <container_id>

docker history <imagename>


### Port-Mapping

goto hub.docker & search for tomcat


docker run -it -p 8088:8080 tomcat:8.0

docker run -it -d -p 8088:8080 tomcat:8.0

###Docker Logs

docker logs <container_id>

#-p host_port:container_port

### Docker Logs




#Access Docker contents using exec - Non-Interactive Mode: 

docker exec e8553a4721d5 cat /etc/hosts

#Access Docker contents using exec - Interactive Mode: 

docker run -it centos bash
dockerpath# cat /etc/*release*
dockerpath# exit


###Build Docker Image 

###Using commit: 

docker run -it debian

ls

git

apt-get update && apt-get install -y git 

clear

git 

docker ps -a 

docker commit <container_id> loksaieta/debian-git:1.0

docker images

docker run -it -d loksaieta/debian-git:1.0


###Using Docker file:

mkdir docker-contents
cd docker-contents

vi Dockerfile

FROM debian
RUN apt-get update
RUN apt-get install -y git
RUN apt-get unstall -y vim

### Best Practice:

FROM debian
RUN apt-get update && apt-get install -y \
	git \
	vim

###

###save this Dockerfile

docker build -t loksaieta/debian-git1 .

docker images


#### Docker Push images to Docker Registry:

docker images

docker tag <image_id> loksaieta/debian-git:1.0

docker images 

## Push to docker registry

docker login --username=loksaieta

password:

docker push loksaieta/debian-git:1.0

docker push loksaieta/mywebapp:1.0

docker push loksaieta/debian-git:1.1

Docker File

Networking

Storage

Docker-Compose

Docker-Swarm


Create any new code version... -- dockerised -- push to docker registry 


Deploy a web appln.

Login_screen service (UI)

Database SErvice - 



Virtual Machine - Node - public_ip 

c1,c2,c3,c4

Port Mapping.. 



Container :

Jenkins - 8080

tomcat - 8089



Ansible playbooks :

Play 1 :





Play 2 :



Play 3 :


Docker Compose :

docker-compose.yaml Node - public_ip

Node1:

Container 1
			Jenkins - automated Build
Container 2
			Testing - Selenium tools 
Container 3
			Tomcat/Nginx - 

Node2:

Container 1
			Jenkins - automated Build
Container 2
			Testing - Selenium tools 
Container 3
			Tomcat/Nginx - 


Container 1
			Jenkins - automated Build
Container 2
			Testing - Selenium tools 
Container 3
			Tomcat/Nginx - 

Container 1
			Jenkins - automated Build
Container 2
			Testing - Selenium tools 
Container 3
			Tomcat/Nginx - 

Container 1
			Jenkins - automated Build
Container 2
			Testing - Selenium tools 
Container 3
			Tomcat/Nginx - 

Container 1
			Jenkins - automated Build
Container 2
			Testing - Selenium tools 
Container 3
			Tomcat/Nginx - 
			
Docker Swarm - Container Orchestrator 

Kubernetes. 
			
















